import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable, of } from 'rxjs';
import { catchError, tap } from 'rxjs/operators';

@Injectable({
  providedIn: 'root',
})
export class CategoryService {
  private apiUrl = 'http://localhost:3000/categories'; // URL base para categor√≠as

  constructor(private http: HttpClient) {}

  /** üîπ Obtener todas las categor√≠as */
  getCategories(): Observable<any[]> {
    return this.http.get<any[]>(this.apiUrl).pipe(
      tap(() => console.log('Categor√≠as obtenidas')),
      catchError(error => {
        console.error('Error obteniendo categor√≠as:', error);
        return of([]);
      })
    );
  }

  /** üîπ Obtener una categor√≠a por ID */
  getCategoryById(categoryId: number): Observable<any> {
    return this.http.get<any>(`${this.apiUrl}/${categoryId}`).pipe(
      tap(() => console.log(`Categor√≠a obtenida ID: ${categoryId}`)),
      catchError(error => {
        console.error(`Error obteniendo categor√≠a ID: ${categoryId}`, error);
        return of(null);
      })
    );
  }

  /** üîπ Crear una nueva categor√≠a */
  createCategory(categoryData: any): Observable<any> {
    return this.http.post(this.apiUrl, categoryData).pipe(
      tap(() => console.log('Categor√≠a creada con √©xito')),
      catchError(error => {
        console.error('Error creando categor√≠a:', error);
        return of(null);
      })
    );
  }

  /** üîπ Actualizar una categor√≠a existente */
  updateCategory(id: number, updateData: any): Observable<any> {
    return this.http.put(`${this.apiUrl}/${id}`, updateData).pipe(
      tap(() => console.log(`Categor√≠a actualizada ID: ${id}`)),
      catchError(error => {
        console.error(`Error actualizando categor√≠a ID: ${id}`, error);
        return of(null);
      })
    );
  }

  /** üîπ Eliminar una categor√≠a */
  deleteCategory(id: number): Observable<void> {
    return this.http.delete<void>(`${this.apiUrl}/${id}`).pipe(
      tap(() => console.log(`Categor√≠a eliminada ID: ${id}`)),
      catchError(error => {
        console.error(`Error eliminando categor√≠a ID: ${id}`, error);
        return of();
      })
    );
  }
}
